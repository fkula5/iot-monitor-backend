// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/skni-kod/iot-monitor-backend/services/sensor-service/ent/schema"
	"github.com/skni-kod/iot-monitor-backend/services/sensor-service/ent/sensor"
	"github.com/skni-kod/iot-monitor-backend/services/sensor-service/ent/sensortype"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sensorFields := schema.Sensor{}.Fields()
	_ = sensorFields
	// sensorDescName is the schema descriptor for name field.
	sensorDescName := sensorFields[0].Descriptor()
	// sensor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	sensor.NameValidator = sensorDescName.Validators[0].(func(string) error)
	// sensorDescActive is the schema descriptor for active field.
	sensorDescActive := sensorFields[3].Descriptor()
	// sensor.DefaultActive holds the default value on creation for the active field.
	sensor.DefaultActive = sensorDescActive.Default.(bool)
	// sensorDescCreatedAt is the schema descriptor for created_at field.
	sensorDescCreatedAt := sensorFields[6].Descriptor()
	// sensor.DefaultCreatedAt holds the default value on creation for the created_at field.
	sensor.DefaultCreatedAt = sensorDescCreatedAt.Default.(func() time.Time)
	// sensorDescUpdatedAt is the schema descriptor for updated_at field.
	sensorDescUpdatedAt := sensorFields[7].Descriptor()
	// sensor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sensor.DefaultUpdatedAt = sensorDescUpdatedAt.Default.(func() time.Time)
	// sensor.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sensor.UpdateDefaultUpdatedAt = sensorDescUpdatedAt.UpdateDefault.(func() time.Time)
	sensortypeFields := schema.SensorType{}.Fields()
	_ = sensortypeFields
	// sensortypeDescName is the schema descriptor for name field.
	sensortypeDescName := sensortypeFields[0].Descriptor()
	// sensortype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	sensortype.NameValidator = sensortypeDescName.Validators[0].(func(string) error)
	// sensortypeDescModel is the schema descriptor for model field.
	sensortypeDescModel := sensortypeFields[1].Descriptor()
	// sensortype.ModelValidator is a validator for the "model" field. It is called by the builders before save.
	sensortype.ModelValidator = sensortypeDescModel.Validators[0].(func(string) error)
	// sensortypeDescCreatedAt is the schema descriptor for created_at field.
	sensortypeDescCreatedAt := sensortypeFields[7].Descriptor()
	// sensortype.DefaultCreatedAt holds the default value on creation for the created_at field.
	sensortype.DefaultCreatedAt = sensortypeDescCreatedAt.Default.(func() time.Time)
}
