// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SensorsColumns holds the columns for the "sensors" table.
	SensorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sensor_type", Type: field.TypeInt},
		{Name: "sensor_type_sensors", Type: field.TypeInt, Nullable: true},
	}
	// SensorsTable holds the schema information for the "sensors" table.
	SensorsTable = &schema.Table{
		Name:       "sensors",
		Columns:    SensorsColumns,
		PrimaryKey: []*schema.Column{SensorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sensors_sensor_types_type",
				Columns:    []*schema.Column{SensorsColumns[9]},
				RefColumns: []*schema.Column{SensorTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sensors_sensor_types_sensors",
				Columns:    []*schema.Column{SensorsColumns[10]},
				RefColumns: []*schema.Column{SensorTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SensorTypesColumns holds the columns for the "sensor_types" table.
	SensorTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "model", Type: field.TypeString},
		{Name: "manufacturer", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "unit", Type: field.TypeString, Nullable: true},
		{Name: "min_value", Type: field.TypeFloat64, Nullable: true},
		{Name: "max_value", Type: field.TypeFloat64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// SensorTypesTable holds the schema information for the "sensor_types" table.
	SensorTypesTable = &schema.Table{
		Name:       "sensor_types",
		Columns:    SensorTypesColumns,
		PrimaryKey: []*schema.Column{SensorTypesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SensorsTable,
		SensorTypesTable,
	}
)

func init() {
	SensorsTable.ForeignKeys[0].RefTable = SensorTypesTable
	SensorsTable.ForeignKeys[1].RefTable = SensorTypesTable
}
